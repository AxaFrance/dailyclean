name: DailyClean Docker Images CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  sonar:
    environment: dailyclean
    name: Sonar Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
          
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
        working-directory: ./api/api
        
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: npm install
        run: npm install
        working-directory: ./api/web
        
      - name: npm test
        run: npm test -- --runInBand --coverage --watchAll=false
        working-directory: ./api/web
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=axaguildev
            -Dsonar.projectKey=AxaGuilDEv_dailyclean
            -Dsonar.java.binaries=api/api/target/classes
            -Dsonar.java.libraries=.
            -Dsonar.coverage.jacoco.xmlReportPaths=**/target/jacoco-report/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=api/web/coverage/lcov.info
            -Dsonar.python.version=3
            -Dsonar.exclusions=**/*.spec.js,**/*.stories.js,**/src/coverage/**,**/*.scss,**/__snapshots__/**,**/node_modules/**,**/src/.storybook/**,**/src/storybook-static/**,**/__mocks__/**
            -Dsonar.coverage.exclusions=**src/test/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tags:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@master
      - name: Bump version and push tag
        id: tag_version
        if: github.ref == 'refs/heads/main'
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Add tag to output step
        id: tag
        if: github.ref == 'refs/heads/main'
        run: echo "::set-output name=new_version::${{ steps.tag_version.outputs.new_version }}"

  build_api:
    environment: dailyclean
    needs: tags
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: axaguildev/dailyclean-api

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ needs.tags.outputs.new_version }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build_job:
    environment: dailyclean
    needs: tags
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: axaguildev/dailyclean-job

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ needs.tags.outputs.new_version }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}