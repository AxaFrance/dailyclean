name: DailyClean Docker Images CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:

  tags:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@master
      - name: Bump version and push tag
        id: tag_version
        if: github.ref == 'refs/heads/main'
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Add tag to output step
        id: tag
        if: github.ref == 'refs/heads/main'
        run: echo "::set-output name=new_version::${{ steps.tag_version.outputs.new_version }}"

  build_api:
    environment: dailyclean
    needs: tags
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: axaguildev/dailyclean-api
        tags: |
          # minimal
          type=semver,event=branch,pattern={{version}}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
   # - name: Build and push
   #   if: github.event_name != 'pull_request'
   #   uses: docker/build-push-action@v2
   #   with:
   #     context: ./api
   #     file: ./api/Dockerfile
   #     builder: ${{ steps.buildx.outputs.name }}
   #     push: true
   #     tags: ${{ needs.tags.outputs.new_version }}
   #     labels: ${{ steps.meta.outputs.labels }}
   #     cache-from: type=registry,ref=axaguildev/dailyclean-api:buildcache
   #     cache-to: type=registry,ref=axaguildev/dailyclean-api:buildcache,mode=max
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./api
        file: ./api/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=axaguildev/dailyclean-api:buildcache
        cache-to: type=registry,ref=axaguildev/dailyclean-api:buildcache,mode=max


  build_job:
    environment: dailyclean
    needs: tags
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: axaguildev/dailyclean-job
        tags: |
          # minimal
          type=semver,event=branch,pattern={{version}}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      uses: docker/build-push-action@v2
    #  if: github.event_name != 'pull_request'
      with:
        context: ./job/dailyclean
        file: ./job/dailyclean/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=axaguildev/dailyclean-job:buildcache
        cache-to: type=registry,ref=axaguildev/dailyclean-job:buildcache,mode=max
 #   - name: Build and push
 #     uses: docker/build-push-action@v2
 #     if: github.event_name == 'pull_request'
 #     with:
 #       context: ./job/dailyclean
 #       file: ./job/dailyclean/Dockerfile
 #       builder: ${{ steps.buildx.outputs.name }}
 #       push: true
 #       tags: ${{ steps.meta.outputs.tags }}
 #       labels: ${{ steps.meta.outputs.labels }}
 #       cache-from: type=registry,ref=axaguildev/dailyclean-job:buildcache
 #       cache-to: type=registry,ref=axaguildev/dailyclean-job:buildcache,mode=max